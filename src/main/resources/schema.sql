DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;

CREATE TABLE IF NOT EXISTS users (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(255) NOT NULL,
	email VARCHAR(512) NOT NULL,
	CONSTRAINT pk_user PRIMARY KEY (id),
	CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items (
	id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	name VARCHAR(255) NOT NULL,
	description VARCHAR(1024) NOT NULL,
	is_available BOOL NOT NULL DEFAULT TRUE,
	owner_id BIGINT NOT NULL,
	request_id BIGINT NULL,
	CONSTRAINT pk_item PRIMARY KEY (id),
	CONSTRAINT fk_owner_item FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings (
    id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    status_id INT NOT NULL,
    CONSTRAINT check_dates CHECK ((end_date >= start_date)),
    CONSTRAINT pk_booking PRIMARY KEY (id),
    CONSTRAINT fk_item_booking FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
    CONSTRAINT fk_booker_booking FOREIGN KEY (booker_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    description VARCHAR(1024) NOT NULL,
    requestor_id BIGINT NOT NULL,
    created_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT fk_requestor_request FOREIGN KEY (requestor_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
    id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    text VARCHAR(1024) NOT NULL,
    item_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (id),
    CONSTRAINT fk_item_comment FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
    CONSTRAINT fk_author_comment FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE
);

